/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addressTokenStaking",
        type: "address",
      },
      {
        internalType: "address",
        name: "addressTokenReward",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakeHolder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakeHolder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakeHolder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeHolderAddress",
        type: "address",
      },
    ],
    name: "calculateAvailableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dayCount",
        type: "uint256",
      },
    ],
    name: "calculateTps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dailyReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeHolderAddress",
        type: "address",
      },
    ],
    name: "getStakeHolder",
    outputs: [
      {
        internalType: "uint256",
        name: "staked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardMissed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "precision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardProduced",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenReward",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenStaking",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670de0b6b3a764000060646200001b9190620002a9565b6002553480156200002b57600080fd5b50604051620023e4380380620023e4833981810160405281019062000051919062000268565b620000857fab263803cd20c591cde79d6c4396a51eacef3c7064eaad925efb54cc174aa1c360001b6200024e60201b60201c565b620000b97f9cd68490227950d12aa0cb75097ba483e3d9b8047f52e1534742ec640c4a6dfd60001b6200024e60201b60201c565b620000ed7fa5459487e6912bcdc210ea8fdeab2fd3f707e277596bf98a835ae960cb7bb14a60001b6200024e60201b60201c565b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001627f15b7bdb48342f443db0664d5416350489b03f6d3252bf907462c8e5d6840281a60001b6200024e60201b60201c565b620001967f76e34c448d6f144e711e1eb348ab2085d2f0151f6568b7d3afa59c18318af0bb60001b6200024e60201b60201c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b7f441e010e3c2e6ceaeaf50261439772445653913084ad1c5df6c7d58deeef4cd860001b6200024e60201b60201c565b6200023f7fa977c646bd2a80b65887afe661d3b8797b4569077bf98ccfe9b8a886e8b503bd60001b6200024e60201b60201c565b42600381905550505062000391565b50565b600081519050620002628162000377565b92915050565b600080604083850312156200027c57600080fd5b60006200028c8582860162000251565b92505060206200029f8582860162000251565b9150509250929050565b6000620002b6826200033e565b9150620002c3836200033e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620002ff57620002fe62000348565b5b828202905092915050565b600062000317826200031e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b62000382816200030a565b81146200038e57600080fd5b50565b61204380620003a16000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637dc30ede11610097578063c8f33c9111610066578063c8f33c9114610250578063c964ad451461026e578063d3b5dc3b1461028c578063e07ae092146102aa576100f5565b80637dc30ede146101c8578063817b1cd2146101e65780638790c5ee14610204578063a694fc3a14610234576100f5565b80634861662a116100d35780634861662a1461013e5780636e66f6e91461016e57806374dc243a1461018c5780637a1cff77146101be576100f5565b8063033c10ac146100fa5780632e17de7814610118578063372500ab14610134575b600080fd5b6101026102c8565b60405161010f9190611d0e565b60405180910390f35b610132600480360381019061012d9190611b83565b6102ce565b005b61013c610881565b005b61015860048036038101906101539190611b83565b610c45565b6040516101659190611d0e565b60405180910390f35b610176610dfd565b6040516101839190611c95565b60405180910390f35b6101a660048036038101906101a19190611b31565b610e23565b6040516101b593929190611d29565b60405180910390f35b6101c6610f8d565b005b6101d061111a565b6040516101dd9190611c95565b60405180910390f35b6101ee611140565b6040516101fb9190611d0e565b60405180910390f35b61021e60048036038101906102199190611b31565b611146565b60405161022b9190611d0e565b60405180910390f35b61024e60048036038101906102499190611b83565b6114bc565b005b6102586118d5565b6040516102659190611d0e565b60405180910390f35b6102766118db565b6040516102839190611d0e565b60405180910390f35b6102946118e1565b6040516102a19190611d0e565b60405180910390f35b6102b26118ed565b6040516102bf9190611d0e565b60405180910390f35b60045481565b6102fa7f4a9f4854d60a32eb5d02ca87f6a72269a3592301c0de78a54ef826ef80c17e9560001b6118f3565b6103267f0544614365a471df4bff1458f95ac10d21c10f2b5b9bd62e2275d26e21f8b5fb60001b6118f3565b6103527fc2b9fe98e94150eea5a4eb9dc72b1e1b62195a86fda403c6cbda40775ee67ea960001b6118f3565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506103c17fc7c3fbc6dd8cc1cd46af639400884108388967f82a91de8c277f419c340f5df760001b6118f3565b6103ed7fc936d0e598a8b1b7fb183880773d36318a2e8b9ceab722a06efeb59504e2ab8960001b6118f3565b6104197f5ee5a4bda254aa6ac4d183a517a8f3eb160c7f753432b322ba38a0d6a8d4152260001b6118f3565b8060000154821115610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790611cee565b60405180910390fd5b61048c7f8fc7cf77a878d2188266a30a274957498115f0e12578d0cb884fba201c8f61fd60001b6118f3565b6104b87f72501345fc45c5362f25cf99fe589595528c8935be8d6c99248e8a7275b29f1760001b6118f3565b6104e47f353d8eb0b2e3081b259b31c21ad391c5a777e437bcec14f8b6b29b5050f6ea2f60001b6118f3565b6104ec610f8d565b6105187fbd8705e428d0e0ba7e26be3739ecce161989a81b9b255c4934c00cdb881a064760001b6118f3565b6105447f7ed28a5abaaaaaee9516b94b4a29424416dc1fd6692283fd1e4a51480119a39360001b6118f3565b8060020154816000015460045461055b9190611e03565b6105659190611e5d565b8160010160008282546105789190611d7c565b925050819055506105ab7fc398146da64dc82ae87306a1313f43541d724f94b3d02b4cd6c26dce97c8eb3360001b6118f3565b6105d77fb21be95ee23170179737a57fd5037852caca4f535614389ffc3c3a17afe7729e60001b6118f3565b818160000160008282546105eb9190611e5d565b9250508190555061061e7f9b147013c6ae2c4e9c8522515c0c96cc2871c6e8db003215a2788c62655908d560001b6118f3565b61064a7f0abbf99f89005c600418a4b895a56a7ae2a2673be9b4aef234be2b483ebd46aa60001b6118f3565b61065781600001546118f6565b816002018190555061068b7f6683c5b1483eefaef56c796adff197696e21ac3fecc4683acdc78ffa8c66ce8260001b6118f3565b6106b77f59f0f319db7afe5313165cf5e29b32a4bc570daaf2d900b8946cd154abee65d560001b6118f3565b816000808282546106c89190611e5d565b925050819055506106fb7f41844902efaecf5047dcf05e950beddb068257045549188f71bc56ab6f7fc92a60001b6118f3565b6107277f85d926758e4e08e0f7f84328801bf346044227f4d3e41ec14b37f8e9218f7a0e60001b6118f3565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610784929190611c6c565b602060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d69190611b5a565b506108037f87177cef0acecf0d9dbec211c678db1a880c0925c02b3f3299486f316343479660001b6118f3565b61082f7f8ce667b76d49e87678fb899b44377436eb21acc8203977732cd66c156233872860001b6118f3565b3373ffffffffffffffffffffffffffffffffffffffff167f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd836040516108759190611d0e565b60405180910390a25050565b6108ad7f5b9120c00ccb58839c60988378fd07b612b0555aed8ddc1dfe4b41b048e1167760001b6118f3565b6108d97f4863e7c6cac31680b205ad3e683a70ff18e03b2e892e2a684d90ca53aec2408060001b6118f3565b6109057fb839e91f8c11b3aee4060642f8821c8ab69704e1d997035dd02668f8a3c0b14b60001b6118f3565b61090d610f8d565b6109397fcb47f0d6f2b53629f61374fb63defab7b0e87f6d09326e2ae34c1e2901c1199d60001b6118f3565b6109657f6887434dd8224c9316332d45f78f8e2dffd9ef01713909ac4971f7ff93172fdc60001b6118f3565b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506109d47f323f9b2f3f043d0cfd99c945c9d705b926c7c83dca298dba164f64f8d1a3a0f860001b6118f3565b610a007fd73dc8909d975f803cf6d16510a4d580119370062501a4761ebe4b00f74266bf60001b6118f3565b6000610a0b33611146565b9050610a397f08313d93b86dca7c155e5ec242ffb5fedd32f30a62229298a9912ca9cb2b611860001b6118f3565b610a657fbb2e89da28f310a68469d19985dbb760b31bb79a3e01b7409446618c1c35692c60001b6118f3565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ac2929190611c6c565b602060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b149190611b5a565b50610b417f113a117fc9a5e8b63d9781f3f3b2e40b8648cb871db4066e50987617b90bc55960001b6118f3565b610b6d7f98478d8ef83ebb46acd0792702de50d4cbb5f077f8049849786a575572a5fc3460001b6118f3565b670de0b6b3a764000081610b819190611e03565b826002016000828254610b949190611d7c565b92505081905550610bc77f52da1064afc4e4a22b3196b00677d7a5a5141a036e7d26bddbbffbc1f309bb7360001b6118f3565b610bf37f39e4e294e33dd0577de9235e519a36dca569f73c1d6cfd7af6b2e7bfaeb51d5960001b6118f3565b3373ffffffffffffffffffffffffffffffffffffffff167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d482604051610c399190611d0e565b60405180910390a25050565b6000610c737f7a4de458633db90b15e17dd7b8f800c5526fe2e99fd2e31215ef952a2c2bc74660001b6118f3565b610c9f7fa876de96473e15fa2f8378a0378eb7ddd766c01a482f511bd3f5efe4afe2df2c60001b6118f3565b610ccb7fea95b617b40fe75f007ea1b9596bd601ecd056bcba1a18eb5460eeceef5b0f5960001b6118f3565b600080541415610d3657610d017fc1420b13f75fe3925485face62bbf0bb782227ecf4a2051c515da1dc009c4f4f60001b6118f3565b610d2d7f70af24e810b35449fe0cbd00db3d135a7fc8f90319214cd15fe355179468965660001b6118f3565b60009050610df8565b610d627f4bec895ef09d9c29285789e36a7527568abfdaea54032072d84e912b91edb7df60001b6118f3565b610d8e7fa801a6b64fb86cfe35509eaff1e76c78e26c9cfb15672d1583a1bab9c8a1914d60001b6118f3565b610dba7f344758980dfd3598195a71770d658b1228e310b6071e6af54185b0d3d3d2917c60001b6118f3565b81600054670de0b6b3a7640000600254610dd49190611e03565b610dde9190611dd2565b610de89190611e03565b600454610df59190611d7c565b90505b919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000610e547fa2bb96f266529f244884fd2f9bd0f7c26fd6738c0f5dbc0ccaebb225c247f19060001b6118f3565b610e807ffb44ccca68ec17a33eef43dea8cfd336099c7bd25c8dfb7e06a88a372151770f60001b6118f3565b610eac7fbe28e148a3afd72c096e4c9c15a924613a6eb3f839c98132d196cd6cfecc856d60001b6118f3565b6000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050610f447f8b8d68e1a8be0816ea725f0fa79bec6e781761ccc7fa1e40de5a63497c2203b760001b6118f3565b610f707feeaa920e2d16ac0bb8884acd803733af2cd946f6b3342092af99885077e077cf60001b6118f3565b806000015181602001518260400151935093509350509193909250565b610fb97f80eef9bc25afa0024e4da648fbe7c0bcdbde3c3d98b57b57df5fe260a5bf4c4e60001b6118f3565b610fe57f9df7e7169b154e1b3fa715e6b182493c5ba3b25100731b4eaa0b8117ffb6d9e560001b6118f3565b6110117f99d00d5247467eeac6cc2bf97bd80c8ad48f2b36c006805caa62b29e3997a87860001b6118f3565b600062015180600354426110259190611e5d565b61102f9190611dd2565b905061105d7f31fea369c4fbd401ec60e4825712c45566e61abbeb36b8777b2861552665699b60001b6118f3565b6110897fba0a3fc76a5e6717ea375721cc88865eb258f453ca6b0db37479a6e3b073ad1460001b6118f3565b62015180816110989190611e03565b600360008282546110a99190611d7c565b925050819055506110dc7f7ae39f94546e137e17ea2a5bb2f01ebd2ebd4b17310dfe43aed6598777c86f9d60001b6118f3565b6111087f50b15b415079c0ef08b62a662516e1d24864b11d607748ae9850c5aa6b6161c260001b6118f3565b61111181610c45565b60048190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60006111747fc021a3d6bc18ba9ea02adf23b1a184479eb47bd41f5bc95342018953b39a6d3c60001b6118f3565b6111a07feb4c18ac71e3c4cead478d7ded93bd277790356596bbdd51772d93c245ef83a760001b6118f3565b6111cc7fddd097da70863b2803dfdffae1137ca2716fd821106ba0d4d6926a05096dec5a60001b6118f3565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061123b7fd82795fa7c4a3c65dd05f5350bc28fca7d4bea3f12564e021be809ebeb98d19360001b6118f3565b6112677fc4a0f2c043049107926b338f314d3989a1335325f8e2adca48bf05989166a7a860001b6118f3565b6000620151806003544261127b9190611e5d565b6112859190611dd2565b90506112b37fe554650e03eb5bb79bf16ae4dc6b9bf5dd5f7c6e1316af155a36f702aeb73f2a60001b6118f3565b6112df7f33041d4ba61bf77372429db168c5ae4b6fcd1d26df49c83b5b0ae377da8dd5b060001b6118f3565b6112e881611991565b6113147f9bc3cfe88fca5aa83d730abde5f84ed1ae38678e7dc736e602d397794b057d6760001b6118f3565b6113407f900c0cab32929135e3007a057b5a3aadaaa2b5762fbefdf115eada8473fbd98660001b6118f3565b600081600054670de0b6b3a764000060025461135c9190611e03565b6113669190611dd2565b6113709190611e03565b60045461137d9190611d7c565b90506113ab7f80588ff7525fcaae50447916d0698d697df49a843d2e88599cbfb3b813c8c1b560001b6118f3565b6113d77f964abfd6978c5af84326444d04d33b26bf708fee23fca066842136e2eef31c0360001b6118f3565b6114196040518060400160405280601681526020017f4f6c645470733a2025732c204e65775470733a2025730000000000000000000081525060045483611a2a565b6114457f9643466c060f6c62cff65a4fd04c55d1978481ddf08636f9b4405d44d533873e60001b6118f3565b6114717f7612d1bfd956a8f03bc810a390ddfb408c7d9310d7370dc1bad554511161545560001b6118f3565b670de0b6b3a7640000836001015484600201548560000154846114949190611e03565b61149e9190611e5d565b6114a89190611d7c565b6114b29190611dd2565b9350505050919050565b6114e87ffa0104244c2d44156be0f8368aadac4dac3c9b2955b9c585eec04d333ced630160001b6118f3565b6115147f6df9a8c636730dbc1e1496e319d1bbe764ede793f5031c7dabd2cace87810fd960001b6118f3565b6115407f25784820855685ad182014e4502d5fbe547ac462b336f4f8aae1de9a6d5caf2860001b6118f3565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161159f93929190611c35565b602060405180830381600087803b1580156115b957600080fd5b505af11580156115cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f19190611b5a565b5061161e7f8b13ab56efd846f94af7a1b2865d98f82e55151123cab16fbe67e61a5fc8258c60001b6118f3565b61164a7fcd54d5151cb4dfa6eb6795bc5a0c270cdddb8ea390fd3aeab18ace78847f844d60001b6118f3565b611652610f8d565b61167e7f720dc7d5766f201ed90fcdaa94921e938f69f6a3017928313c20e3ff20fe0ecc60001b6118f3565b6116aa7ffb223c0c8c0a20f7545d069d2cf2224f23cd0492e7577181f48c20bb7770961360001b6118f3565b806000808282546116bb9190611d7c565b925050819055506116ee7fedfe14bdc170d2494d63698b21003218bfd0cb3bdf685c5232c5334ae126b2f560001b6118f3565b61171a7ff232c352c9866ddd22e7b0f2f42c15bc422c820064f568a425d4fc7309c766a960001b6118f3565b611723816118f6565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546117749190611d7c565b925050819055506117a77fa4e87031542fae70db2567712a3767545c58d55fd8b8c23ef6fe7e1df956cb5260001b6118f3565b6117d37fd651a363508cec02ce70fe3dcfea961507e555ded825c755f6c5d5a7e80a391660001b6118f3565b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546118259190611d7c565b925050819055506118587f01999061f8f73960d9a5e5c1a0bfa231fc4be015d88a2e64f2a1518578100d4160001b6118f3565b6118847f1f1f740e768d8113d31f5f2ab1d69858c945a04493af267a86e011b5ad53061960001b6118f3565b3373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a826040516118ca9190611d0e565b60405180910390a250565b60035481565b60025481565b670de0b6b3a764000081565b60015481565b50565b60006119247f3c4156d19bfdca333b489da2eb4e370a84c224b54a3bed9fbe8b61404644fd8060001b6118f3565b6119507ff7f96d6e0349155d09a8dab6c03684e3725fb53fc9c76eb348df54a8142cfa0160001b6118f3565b61197c7feb891607b310909cf8dff4aa13d32e72fd9bdeffd0f4a99ff962e5991955edd560001b6118f3565b6004548261198a9190611e03565b9050919050565b611a27816040516024016119a59190611d0e565b6040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ac9565b50565b611ac4838383604051602401611a4293929190611cb0565b6040516020818303038152906040527f969cdd03000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ac9565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600081359050611b0181611fc8565b92915050565b600081519050611b1681611fdf565b92915050565b600081359050611b2b81611ff6565b92915050565b600060208284031215611b4357600080fd5b6000611b5184828501611af2565b91505092915050565b600060208284031215611b6c57600080fd5b6000611b7a84828501611b07565b91505092915050565b600060208284031215611b9557600080fd5b6000611ba384828501611b1c565b91505092915050565b611bb581611e91565b82525050565b611bc481611ed9565b82525050565b6000611bd582611d60565b611bdf8185611d6b565b9350611bef818560208601611efd565b611bf881611f8e565b840191505092915050565b6000611c10602083611d6b565b9150611c1b82611f9f565b602082019050919050565b611c2f81611ecf565b82525050565b6000606082019050611c4a6000830186611bac565b611c576020830185611bac565b611c646040830184611c26565b949350505050565b6000604082019050611c816000830185611bac565b611c8e6020830184611c26565b9392505050565b6000602082019050611caa6000830184611bbb565b92915050565b60006060820190508181036000830152611cca8186611bca565b9050611cd96020830185611c26565b611ce66040830184611c26565b949350505050565b60006020820190508181036000830152611d0781611c03565b9050919050565b6000602082019050611d236000830184611c26565b92915050565b6000606082019050611d3e6000830186611c26565b611d4b6020830185611c26565b611d586040830184611c26565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000611d8782611ecf565b9150611d9283611ecf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611dc757611dc6611f30565b5b828201905092915050565b6000611ddd82611ecf565b9150611de883611ecf565b925082611df857611df7611f5f565b5b828204905092915050565b6000611e0e82611ecf565b9150611e1983611ecf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e5257611e51611f30565b5b828202905092915050565b6000611e6882611ecf565b9150611e7383611ecf565b925082821015611e8657611e85611f30565b5b828203905092915050565b6000611e9c82611eaf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611ee482611eeb565b9050919050565b6000611ef682611eaf565b9050919050565b60005b83811015611f1b578082015181840152602081019050611f00565b83811115611f2a576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f416d6f756e74206578636565647320746865207374616b656420616d6f756e74600082015250565b611fd181611e91565b8114611fdc57600080fd5b50565b611fe881611ea3565b8114611ff357600080fd5b50565b611fff81611ecf565b811461200a57600080fd5b5056fea264697066735822122050cfa45eeff0e6729c1d8e3ec6fa74c89184adc8d232836e1fb524677ac6ce4964736f6c63430008040033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Staking";
  }

  deploy(
    addressTokenStaking: string,
    addressTokenReward: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      addressTokenStaking,
      addressTokenReward,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    addressTokenStaking: string,
    addressTokenReward: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      addressTokenStaking,
      addressTokenReward,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly contractName: "Staking";
  public readonly contractName: "Staking";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
