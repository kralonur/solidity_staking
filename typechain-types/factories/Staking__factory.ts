/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "addressTokenStaking",
        type: "address",
      },
      {
        internalType: "address",
        name: "addressTokenReward",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenClaimPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakeHolder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakeHolder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakeHolder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeHolderAddress",
        type: "address",
      },
    ],
    name: "calculateAvailableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "passedTime",
        type: "uint256",
      },
    ],
    name: "calculateTps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakeHolderAddress",
        type: "address",
      },
    ],
    name: "getStakeHolder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "staked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "availableReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardMissed",
            type: "uint256",
          },
        ],
        internalType: "struct Staking.StakeHolder",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "precision",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardProduced",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenClaimPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "setParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenClaimPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenReward",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenStaking",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateValues",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d0838038062001d088339818101604052810190620000379190620001fa565b620000576200004b6200010060201b60201c565b6200010860201b60201c565b84600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826003819055508160058190555080600681905550426004819055505050505050620002ee565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001dd81620002ba565b92915050565b600081519050620001f481620002d4565b92915050565b600080600080600060a086880312156200021357600080fd5b60006200022388828901620001cc565b95505060206200023688828901620001cc565b94505060406200024988828901620001e3565b93505060606200025c88828901620001e3565b92505060806200026f88828901620001e3565b9150509295509295909350565b6000620002898262000290565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002c5816200027c565b8114620002d157600080fd5b50565b620002df81620002b0565b8114620002eb57600080fd5b50565b611a0a80620002fe6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637a1cff77116100b8578063a694fc3a1161007c578063a694fc3a146102f4578063c8f33c9114610310578063d3b5dc3b1461032e578063e07ae0921461034c578063e1d929d71461036a578063f2fde38b1461038857610137565b80637a1cff77146102605780637dc30ede1461026a578063817b1cd2146102885780638790c5ee146102a65780638da5cb5b146102d657610137565b8063372500ab116100ff578063372500ab146101ce5780634861662a146101d85780636e66f6e914610208578063715018a61461022657806374dc243a1461023057610137565b8063033c10ac1461013c5780630fb5a6b41461015a578063228cb733146101785780632e17de781461019657806334c5d2ce146101b2575b600080fd5b6101446103a4565b60405161015191906115b7565b60405180910390f35b6101626103aa565b60405161016f91906115b7565b60405180910390f35b6101806103b0565b60405161018d91906115b7565b60405180910390f35b6101b060048036038101906101ab91906111db565b6103b6565b005b6101cc60048036038101906101c79190611204565b61056b565b005b6101d6610601565b005b6101f260048036038101906101ed91906111db565b61073f565b6040516101ff91906115b7565b60405180910390f35b6102106107b1565b60405161021d919061149f565b60405180910390f35b61022e6107d7565b005b61024a60048036038101906102459190611189565b61085f565b604051610257919061159c565b60405180910390f35b6102686108ee565b005b610272610945565b60405161027f919061149f565b60405180910390f35b61029061096b565b60405161029d91906115b7565b60405180910390f35b6102c060048036038101906102bb9190611189565b610971565b6040516102cd91906115b7565b60405180910390f35b6102de610a00565b6040516102eb9190611424565b60405180910390f35b61030e600480360381019061030991906111db565b610a29565b005b610318610ba4565b60405161032591906115b7565b60405180910390f35b610336610baa565b60405161034391906115b7565b60405180910390f35b610354610bb6565b60405161036191906115b7565b60405180910390f35b610372610bbc565b60405161037f91906115b7565b60405180910390f35b6103a2600480360381019061039d9190611189565b610bc2565b005b60075481565b60065481565b60035481565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000154821115610440576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610437906114fc565b60405180910390fd5b6104486108ee565b8060020154816000015460075461045f919061168b565b61046991906116e5565b81600101600082825461047c9190611604565b925050819055508181600001600082825461049791906116e5565b925050819055506104ab8160000154610cba565b816002018190555081600160008282546104c591906116e5565b925050819055506105193383600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cd19092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd8360405161055f91906115b7565b60405180910390a25050565b610573610d57565b73ffffffffffffffffffffffffffffffffffffffff16610591610a00565b73ffffffffffffffffffffffffffffffffffffffff16146105e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105de9061153c565b60405180910390fd5b826003819055508160058190555080600681905550505050565b6106096108ee565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061065733610971565b90506106a63382600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cd19092919063ffffffff16565b670de0b6b3a7640000816106ba919061168b565b8260020160008282546106cd9190611604565b9250508190555080600260008282546106e69190611604565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d48260405161073391906115b7565b60405180910390a25050565b600080600154141561075457600090506107ac565b600654600154610764919061168b565b82600554670de0b6b3a764000060035461077e919061168b565b610788919061168b565b610792919061168b565b61079c919061165a565b6007546107a99190611604565b90505b919050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107df610d57565b73ffffffffffffffffffffffffffffffffffffffff166107fd610a00565b73ffffffffffffffffffffffffffffffffffffffff1614610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084a9061153c565b60405180910390fd5b61085d6000610d5f565b565b610867611129565b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820154815260200160028201548152505090506108dc83610971565b81602001818152505080915050919050565b60006005546004544261090191906116e5565b61090b919061165a565b90506109168161073f565b6007819055506005548161092a919061168b565b6004600082825461093b9190611604565b9250508190555050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050670de0b6b3a76400008160010154826002015483600001546007546109da919061168b565b6109e491906116e5565b6109ee9190611604565b6109f8919061165a565b915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a316108ee565b8060016000828254610a439190611604565b9250508190555080600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610a9c9190611604565b92505081905550610aac81610cba565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254610afd9190611604565b92505081905550610b53333083600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e23909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a82604051610b9991906115b7565b60405180910390a250565b60045481565b670de0b6b3a764000081565b60025481565b60055481565b610bca610d57565b73ffffffffffffffffffffffffffffffffffffffff16610be8610a00565b73ffffffffffffffffffffffffffffffffffffffff1614610c3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c359061153c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca5906114dc565b60405180910390fd5b610cb781610d5f565b50565b600060075482610cca919061168b565b9050919050565b610d528363a9059cbb60e01b8484604051602401610cf0929190611476565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610eac565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610ea6846323b872dd60e01b858585604051602401610e449392919061143f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610eac565b50505050565b6000610f0e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610f739092919063ffffffff16565b9050600081511115610f6e5780806020019051810190610f2e91906111b2565b610f6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f649061157c565b60405180910390fd5b5b505050565b6060610f828484600085610f8b565b90509392505050565b606082471015610fd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc79061151c565b60405180910390fd5b610fd98561109f565b611018576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100f9061155c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611041919061140d565b60006040518083038185875af1925050503d806000811461107e576040519150601f19603f3d011682016040523d82523d6000602084013e611083565b606091505b50915091506110938282866110c2565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156110d257829050611122565b6000835111156110e55782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111991906114ba565b60405180910390fd5b9392505050565b60405180606001604052806000815260200160008152602001600081525090565b6000813590506111598161198f565b92915050565b60008151905061116e816119a6565b92915050565b600081359050611183816119bd565b92915050565b60006020828403121561119b57600080fd5b60006111a98482850161114a565b91505092915050565b6000602082840312156111c457600080fd5b60006111d28482850161115f565b91505092915050565b6000602082840312156111ed57600080fd5b60006111fb84828501611174565b91505092915050565b60008060006060848603121561121957600080fd5b600061122786828701611174565b935050602061123886828701611174565b925050604061124986828701611174565b9150509250925092565b61125c81611719565b82525050565b600061126d826115d2565b61127781856115e8565b9350611287818560208601611785565b80840191505092915050565b61129c81611761565b82525050565b60006112ad826115dd565b6112b781856115f3565b93506112c7818560208601611785565b6112d081611816565b840191505092915050565b60006112e86026836115f3565b91506112f382611827565b604082019050919050565b600061130b6020836115f3565b915061131682611876565b602082019050919050565b600061132e6026836115f3565b91506113398261189f565b604082019050919050565b60006113516020836115f3565b915061135c826118ee565b602082019050919050565b6000611374601d836115f3565b915061137f82611917565b602082019050919050565b6000611397602a836115f3565b91506113a282611940565b604082019050919050565b6060820160008201516113c360008501826113ef565b5060208201516113d660208501826113ef565b5060408201516113e960408501826113ef565b50505050565b6113f881611757565b82525050565b61140781611757565b82525050565b60006114198284611262565b915081905092915050565b60006020820190506114396000830184611253565b92915050565b60006060820190506114546000830186611253565b6114616020830185611253565b61146e60408301846113fe565b949350505050565b600060408201905061148b6000830185611253565b61149860208301846113fe565b9392505050565b60006020820190506114b46000830184611293565b92915050565b600060208201905081810360008301526114d481846112a2565b905092915050565b600060208201905081810360008301526114f5816112db565b9050919050565b60006020820190508181036000830152611515816112fe565b9050919050565b6000602082019050818103600083015261153581611321565b9050919050565b6000602082019050818103600083015261155581611344565b9050919050565b6000602082019050818103600083015261157581611367565b9050919050565b600060208201905081810360008301526115958161138a565b9050919050565b60006060820190506115b160008301846113ad565b92915050565b60006020820190506115cc60008301846113fe565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061160f82611757565b915061161a83611757565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561164f5761164e6117b8565b5b828201905092915050565b600061166582611757565b915061167083611757565b9250826116805761167f6117e7565b5b828204905092915050565b600061169682611757565b91506116a183611757565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156116da576116d96117b8565b5b828202905092915050565b60006116f082611757565b91506116fb83611757565b92508282101561170e5761170d6117b8565b5b828203905092915050565b600061172482611737565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061176c82611773565b9050919050565b600061177e82611737565b9050919050565b60005b838110156117a3578082015181840152602081019050611788565b838111156117b2576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f416d6f756e74206578636565647320746865207374616b656420616d6f756e74600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61199881611719565b81146119a357600080fd5b50565b6119af8161172b565b81146119ba57600080fd5b50565b6119c681611757565b81146119d157600080fd5b5056fea2646970667358221220b50ef664d8c662eb3b1af58e5bad6b7a4fab4ac4741bcbb6f4d4f76b05233d7664736f6c63430008040033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Staking";
  }

  deploy(
    addressTokenStaking: string,
    addressTokenReward: string,
    _reward: BigNumberish,
    _tokenClaimPeriod: BigNumberish,
    _duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      addressTokenStaking,
      addressTokenReward,
      _reward,
      _tokenClaimPeriod,
      _duration,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    addressTokenStaking: string,
    addressTokenReward: string,
    _reward: BigNumberish,
    _tokenClaimPeriod: BigNumberish,
    _duration: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      addressTokenStaking,
      addressTokenReward,
      _reward,
      _tokenClaimPeriod,
      _duration,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly contractName: "Staking";
  public readonly contractName: "Staking";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
